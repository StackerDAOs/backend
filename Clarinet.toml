[project]
name = "executor-dao"
requirements = []

[repl]
costs_version = 2
parser_version = 2

[repl.analysis]
passes = [] # add ["check_checker"]

[repl.analysis.check_checker]
strict = false
trusted_sender = false
trusted_caller = false
callee_filter = false

[contracts.executor-dao]
path = "contracts/executor-dao.clar"
depends_on = ["proposal-trait", "extension-trait"]

# -- Extensions
[contracts.sde-governance-token-with-lockup]
path = "contracts/extensions/membership/tokens/sde-governance-token-with-lockup.clar"
depends_on = ["executor-dao", "governance-token-trait", "sip010-ft-trait"]

[contracts.sde-governance-token-with-delegation]
path = "contracts/extensions/membership/tokens/sde-governance-token-with-delegation.clar"
depends_on = ["executor-dao", "delegate-token-trait", "sip010-ft-trait"]

[contracts.sde-proposal-voting-with-lockup]
path = "contracts/extensions/voting/sde-proposal-voting-with-lockup.clar"
depends_on = ["executor-dao", "proposal-trait", "extension-trait", "governance-token-trait", "sde-governance-token-with-lockup"]

[contracts.sde-proposal-voting-with-delegation]
path = "contracts/extensions/voting/sde-proposal-voting-with-delegation.clar"
depends_on = ["executor-dao", "proposal-trait", "extension-trait", "delegate-token-trait", "sde-governance-token-with-delegation"]

[contracts.sde-proposal-submission-with-lockup]
path = "contracts/extensions/proposal-submissions/sde-proposal-submission-with-lockup.clar"
depends_on = ["executor-dao", "extension-trait", "sde-proposal-voting-with-lockup"]

[contracts.sde-proposal-submission-with-delegation]
path = "contracts/extensions/proposal-submissions/sde-proposal-submission-with-delegation.clar"
depends_on = ["executor-dao", "extension-trait", "sde-proposal-voting-with-delegation"]

[contracts.sde-emergency-proposals]
path = "contracts/extensions/executive-team/sde-emergency-proposals.clar"
depends_on = ["executor-dao", "extension-trait", "sde-proposal-voting-with-lockup"]

[contracts.sde-emergency-execute]
path = "contracts/extensions/executive-team/sde-emergency-execute.clar"
depends_on = ["executor-dao", "extension-trait", "sde-proposal-voting-with-lockup"]

[contracts.sde-dev-fund]
path = "contracts/extensions/misc/sde-dev-fund.clar"
depends_on = ["executor-dao", "extension-trait", "sde-governance-token-with-lockup"]

[contracts.sde-membership]
path = "contracts/extensions/membership/sde-membership.clar"
depends_on = ["executor-dao", "member-trait", "extension-trait"]

[contracts.sde-proposal-voting-with-members]
path = "contracts/extensions/voting/sde-proposal-voting-with-members.clar"
depends_on = ["executor-dao", "proposal-trait", "extension-trait", "member-trait"]

[contracts.sde-proposal-submission-with-members]
path = "contracts/extensions/proposal-submissions/sde-proposal-submission-with-members.clar"
depends_on = ["executor-dao", "extension-trait", "sde-proposal-voting-with-members"]

[contracts.sde-vault]
path = "contracts/extensions/vaults/sde-vault.clar"
depends_on = ["executor-dao", "extension-trait", "sip009-nft-trait", "sip010-ft-trait"]

[contracts.sde-mia-stacking]
path = "contracts/extensions/misc/sde-mia-stacking.clar"
depends_on = ["executor-dao", "extension-trait"]

[contracts.sde-proposal-voting-with-nft]
path = "contracts/extensions/voting/sde-proposal-voting-with-nft.clar"
depends_on = ["executor-dao", "extension-trait", "nft-membership"]

[contracts.sde-proposal-submission-with-nft]
path = "contracts/extensions/proposal-submissions/sde-proposal-submission-with-nft.clar"
depends_on = ["executor-dao", "extension-trait", "nft-membership", "sde-proposal-voting-with-nft"]

[contracts.sde-multisig]
path = "contracts/extensions/multisignature/sde-multisig.clar"
depends_on = ["executor-dao", "extension-trait", "proposal-trait"]
# -- End of Extensions

# -- Proposals
[contracts.sdp-disable-emergency-powers]
path = "contracts/proposals/sdp-disable-emergency-powers.clar"
depends_on = ["executor-dao", "proposal-trait", "sde-emergency-execute", "sde-emergency-proposals"]

[contracts.sdp-dev-fund]
path = "contracts/proposals/sdp-dev-fund.clar"
depends_on = ["executor-dao", "proposal-trait", "sde-governance-token-with-lockup"]
# -- End of Proposals

# -- Bootstrap Proposals
[contracts.sdp-delegate-voting-dao]
path = "contracts/proposals/bootstraps/sdp-delegate-voting-dao.clar"
depends_on = ["executor-dao", "proposal-trait", "sde-vault", "sde-governance-token-with-delegation"]

[contracts.sdp-multisignature-dao]
path = "contracts/proposals/bootstraps/sdp-multisignature-dao.clar"
depends_on = ["executor-dao", "proposal-trait"]

[contracts.sdp-nft-dao]
path = "contracts/proposals/bootstraps/sdp-nft-dao.clar"
depends_on = ["executor-dao", "proposal-trait"]

[contracts.sdp-vault]
path = "contracts/proposals/bootstraps/sdp-vault.clar"
depends_on = ["executor-dao", "proposal-trait"]
# -- End of Bootstrap Proposals

# -- Multisignature Proposals
[contracts.sdp-add-signer]
path = "contracts/proposals/multisignature/sdp-add-signer.clar"
depends_on = ["proposal-trait", "sde-multisig"]
# -- End of Multisignature Proposals

# -- Transfer Proposals
[contracts.sdp-transfer-ft]
path = "contracts/proposals/transfers/sdp-transfer-ft.clar"
depends_on = ["proposal-trait", "sde-vault"]

[contracts.sdp-transfer-nft]
path = "contracts/proposals/transfers/sdp-transfer-nft.clar"
depends_on = ["proposal-trait", "sde-vault"]

[contracts.sdp-transfer-stx]
path = "contracts/proposals/transfers/sdp-transfer-stx.clar"
depends_on = ["proposal-trait", "sde-vault"]

[contracts.sdp-unauthorized-transfer-stx]
path = "contracts/proposals/transfers/sdp-unauthorized-transfer-stx.clar"
depends_on = ["proposal-trait"]
# -- End of Transfer Proposals

# -- Traits
[contracts.extension-trait]
path = "contracts/traits/extension-trait.clar"
depends_on = []

[contracts.delegate-token-trait]
path = "contracts/traits/delegate-token-trait.clar"
depends_on = []

[contracts.governance-token-trait]
path = "contracts/traits/governance-token-trait.clar"
depends_on = []

[contracts.member-trait]
path = "contracts/traits/member-trait.clar"
depends_on = []

[contracts.ownable-trait]
path = "contracts/traits/ownable-trait.clar"
depends_on = []

[contracts.proposal-trait]
path = "contracts/traits/proposal-trait.clar"
depends_on = []

[contracts.sip009-nft-trait]
path = "contracts/traits/sip009-nft-trait.clar"
depends_on = []

[contracts.sip010-ft-trait]
path = "contracts/traits/sip010-ft-trait.clar"
depends_on = []
# -- End of Traits

# -- External Contracts
[contracts.nft-escrow]
path = "contracts/external/nft-escrow.clar"
depends_on = ["ownable-trait"]

[contracts.nft-membership]
path = "contracts/external/nft-membership.clar"
depends_on = ["sip009-nft-trait"]

[contracts.ft-membership]
path = "contracts/external/ft-membership.clar"
depends_on = ["sip010-ft-trait"]

[contracts.citycoin-auth]
path = "contracts/external/citycoins/citycoin-auth.clar"
depends_on = ["citycoin-core-trait", "citycoin-token-trait"]

[contracts.citycoin-core-trait]
path = "contracts/external/citycoins/citycoin-core-trait.clar"
depends_on = []

[contracts.citycoin-core-v1]
path = "contracts/external/citycoins/citycoin-core-v1.clar"
depends_on = ["citycoin-auth", "citycoin-token", "citycoin-vrf", "citycoin-core-trait"]

[contracts.citycoin-token]
path = "contracts/external/citycoins/citycoin-token.clar"
depends_on = ["sip010-ft-trait", "citycoin-auth", "citycoin-token-trait"]

[contracts.citycoin-token-trait]
path = "contracts/external/citycoins/citycoin-token-trait.clar"
depends_on = []

[contracts.citycoin-vrf]
path = "contracts/external/citycoins/citycoin-vrf.clar"
depends_on = []
# -- End of External Contracts